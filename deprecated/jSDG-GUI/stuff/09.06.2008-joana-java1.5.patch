Index: joana/sdg/slicer/graph/threads/ThreadRegions.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/slicer/graph/threads/ThreadRegions.java,v
retrieving revision 1.3
diff -u -r1.3 ThreadRegions.java
--- joana/sdg/slicer/graph/threads/ThreadRegions.java	2 Jun 2008 14:20:05 -0000	1.3
+++ joana/sdg/slicer/graph/threads/ThreadRegions.java	9 Jun 2008 13:03:51 -0000
@@ -421,7 +421,7 @@
             //slice.add(start);
             
             while (!worklist1.isEmpty()) {
-                SDGNode next = worklist1.pop();
+                SDGNode next = worklist1.removeFirst();
                 
                 for (SDGEdge e : icfg.outgoingEdgesOf(next)) {
                     if (e.getKind() == SDGEdge.Kind.CALL || e.getKind() == SDGEdge.Kind.FORK) {
@@ -438,7 +438,7 @@
             }
             
             while (!worklist2.isEmpty()) {
-                SDGNode next = worklist2.pop();
+                SDGNode next = worklist2.removeFirst();
                 
                 for (SDGEdge e : icfg.outgoingEdgesOf(next)) {
                     if (e.getKind() != SDGEdge.Kind.RETURN) {
@@ -525,7 +525,7 @@
             worklist.addAll(foo);
             
             while(!worklist.isEmpty()) {
-                SDGNode fork = worklist.pop();
+                SDGNode fork = worklist.removeFirst();
                 for (int t : fork.getThreadNumbers()) {
                     if (marked.add(t)) {
                         List<SDGNode> newForks = threadsinfo.getThreadFork(t);
@@ -549,7 +549,7 @@
             slice.addAll(forks);
             
             while (!worklist1.isEmpty()) {
-                SDGNode next = worklist1.pop();
+                SDGNode next = worklist1.removeFirst();
                 if (next == start) return true;
                 
                 for (SDGEdge e : icfg.outgoingEdgesOf(next)) {
@@ -567,7 +567,7 @@
             }
             
             while (!worklist2.isEmpty()) {
-                SDGNode next = worklist2.pop();
+                SDGNode next = worklist2.removeFirst();
                 
                 if (next == start) {
                     return true;
Index: joana/sdg/chopper/barrier/IntraproceduralBarrierChopper.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/chopper/barrier/IntraproceduralBarrierChopper.java,v
retrieving revision 1.1
diff -u -r1.1 IntraproceduralBarrierChopper.java
--- joana/sdg/chopper/barrier/IntraproceduralBarrierChopper.java	20 Feb 2008 15:59:04 -0000	1.1
+++ joana/sdg/chopper/barrier/IntraproceduralBarrierChopper.java	9 Jun 2008 13:03:51 -0000
@@ -89,11 +89,11 @@
 
         // === backward phase ===
 
-        worklist.push(sink);
+        worklist.addFirst(sink);
         visitedBackward.add(sink);
 
         while (!worklist.isEmpty()) {
-            SDGNode n = worklist.pop();
+            SDGNode n = worklist.removeFirst();
 
             for (SDGEdge e : g.incomingEdgesOf(n)) {
 
@@ -110,7 +110,7 @@
 
                 if (!visitedBackward.contains(m) &&
                 		!barrier.contains(e.getTarget())) {
-                    worklist.push(m);
+                    worklist.addFirst(m);
                     visitedBackward.add(m);   
                 }
             }
@@ -120,11 +120,11 @@
 
         if (visitedBackward.contains(source)) {
             
-            worklist.push(source);
+            worklist.addFirst(source);
             visitedForward.add(source);
 
             while (!worklist.isEmpty()) {
-                SDGNode n = worklist.pop();
+                SDGNode n = worklist.removeFirst();
 
                 for (SDGEdge e : g.outgoingEdgesOf(n)) {
                     
@@ -142,7 +142,7 @@
                     if (visitedBackward.contains(m) &&
                         !visitedForward.contains(m) &&
                         !barrier.contains(e.getTarget())) {
-                        worklist.push(m);
+                        worklist.addFirst(m);
                         visitedForward.add(m);
                     }
                 }
@@ -187,7 +187,7 @@
         visitedBackward.addAll(sinkSet);
 
         while (!worklist.isEmpty()) {
-            SDGNode n = worklist.pop();
+            SDGNode n = worklist.removeFirst();
 
             for (SDGEdge e : g.incomingEdgesOf(n)) {
 
@@ -204,7 +204,7 @@
 
                 if (!visitedBackward.contains(m) &&
                 		!barrier.contains(e.getTarget())) {
-                    worklist.push(m);
+                    worklist.addFirst(m);
                     visitedBackward.add(m);   
                 }
             }
@@ -217,7 +217,7 @@
         visitedForward.addAll(sourceSet);
 
         while (!worklist.isEmpty()) {
-            SDGNode n = worklist.pop();
+            SDGNode n = worklist.removeFirst();
 
             for (SDGEdge e : g.outgoingEdgesOf(n)) {
                 
@@ -235,7 +235,7 @@
                 if (visitedBackward.contains(m) &&
                     !visitedForward.contains(m) &&
                     !barrier.contains(e.getTarget())) {
-                    worklist.push(m);
+                    worklist.addFirst(m);
                     visitedForward.add(m);
                 }
             }
Index: joana/sdg/chopper/barrier/DummyChopper.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/chopper/barrier/DummyChopper.java,v
retrieving revision 1.1
diff -u -r1.1 DummyChopper.java
--- joana/sdg/chopper/barrier/DummyChopper.java	20 Feb 2008 15:59:03 -0000	1.1
+++ joana/sdg/chopper/barrier/DummyChopper.java	9 Jun 2008 13:03:51 -0000
@@ -54,11 +54,11 @@
 
     // === backward phase ===
 
-    worklist.push(sink);
+    worklist.addFirst(sink);
     visitedBackward.add(sink);
 
     while (!worklist.isEmpty()) {
-        SDGNode n = worklist.pop();
+        SDGNode n = worklist.removeFirst();
 
         for (SDGEdge e : g.incomingEdgesOf(n)) {
 
@@ -73,7 +73,7 @@
             SDGNode m = e.getSource();
 
             if (!visitedBackward.contains(m)) {
-                worklist.push(m);
+                worklist.addFirst(m);
                 visitedBackward.add(m);   
             }
         }
@@ -83,11 +83,11 @@
 
     if (visitedBackward.contains(source)) {
         
-        worklist.push(source);
+        worklist.addFirst(source);
         visitedForward.add(source);
 
         while (!worklist.isEmpty()) {
-            SDGNode n = worklist.pop();
+            SDGNode n = worklist.removeFirst();
 
             for (SDGEdge e : g.outgoingEdgesOf(n)) {
                 
@@ -103,7 +103,7 @@
 
                 if (visitedBackward.contains(m) &&
                     !visitedForward.contains(m)) {
-                    worklist.push(m);
+                    worklist.addFirst(m);
                     visitedForward.add(m);
                 }
             }
@@ -137,7 +137,7 @@
 		visitedBackward.addAll(sinkSet);
 		
 		while (!worklist.isEmpty()) {
-			SDGNode n = worklist.pop();
+			SDGNode n = worklist.removeFirst();
 			
 			for (SDGEdge e : g.incomingEdgesOf(n)) {
 				
@@ -153,7 +153,7 @@
 				
 				if (!visitedBackward.contains(m)) {
 					System.out.println("visitedBackward: added " + m.getId()); 
-					worklist.push(m);
+					worklist.addFirst(m);
 					visitedBackward.add(m);   
 				}
 			}
@@ -167,7 +167,7 @@
 		
 		while (!worklist.isEmpty()) {
 			System.out.println("source contained in visitedBackward");
-			SDGNode n = worklist.pop();
+			SDGNode n = worklist.removeFirst();
 			
 			for (SDGEdge e : g.outgoingEdgesOf(n)) {
 				
@@ -183,7 +183,7 @@
 				
 				if (visitedBackward.contains(m) &&
 						!visitedForward.contains(m)) {
-					worklist.push(m);
+					worklist.addFirst(m);
 					visitedForward.add(m);
 				}
 			}
Index: joana/sdg/chopper/barrier/CSBarrierChopper.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/chopper/barrier/CSBarrierChopper.java,v
retrieving revision 1.1
diff -u -r1.1 CSBarrierChopper.java
--- joana/sdg/chopper/barrier/CSBarrierChopper.java	20 Feb 2008 15:59:04 -0000	1.1
+++ joana/sdg/chopper/barrier/CSBarrierChopper.java	9 Jun 2008 13:03:51 -0000
@@ -96,7 +96,7 @@
         // === gradually add chops for each summary edge ===
 
         while(!worklist.isEmpty()) {
-            SDGNodeTuple pair = worklist.pop();
+            SDGNodeTuple pair = worklist.removeFirst();
             
             if (!visitedTuples.contains(pair)) {
                 visitedTuples.add(pair);
@@ -151,7 +151,7 @@
         // === gradually add chops for each summary edge ===
 
         while(!worklist.isEmpty()) {
-            SDGNodeTuple pair = worklist.pop();
+            SDGNodeTuple pair = worklist.removeFirst();
             
             if (!visitedTuples.contains(pair)) {
                 visitedTuples.add(pair);
Index: joana/sdg/slicer/IncrementalSummarySlicer.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/slicer/IncrementalSummarySlicer.java,v
retrieving revision 1.7
diff -u -r1.7 IncrementalSummarySlicer.java
--- joana/sdg/slicer/IncrementalSummarySlicer.java	9 Jun 2008 09:26:20 -0000	1.7
+++ joana/sdg/slicer/IncrementalSummarySlicer.java	9 Jun 2008 13:03:51 -0000
@@ -62,7 +62,7 @@
         
         while (!worklist.isEmpty()) {
             while (!worklist.isEmpty()) {
-                SDGNode w = worklist.pop();
+                SDGNode w = worklist.removeFirst();
                 
                 for (SDGEdge e : edgesToTraverse(w)) {
                     if (!e.getKind().isSDGEdge() || omittedEdges.contains(e.getKind()))
@@ -86,7 +86,7 @@
             
             // Summary edge computation
             while (!worklistDown.isEmpty()) {
-                SDGEdge e1 = worklistDown.pop();
+                SDGEdge e1 = worklistDown.removeFirst();
                 SDGNode s = reachedNode(e1), w = startedNode(e1);
                 
                 if (s.getKind() == SDGNode.Kind.FORMAL_IN) {
Index: joana/sdg/slicer/barrier/SummaryEdgeBlocker.java
===================================================================
RCS file: /ben/local/CVS/Joana/joana/src/joana/sdg/slicer/barrier/SummaryEdgeBlocker.java,v
retrieving revision 1.1
diff -u -r1.1 SummaryEdgeBlocker.java
--- joana/sdg/slicer/barrier/SummaryEdgeBlocker.java	20 Feb 2008 15:59:47 -0000	1.1
+++ joana/sdg/slicer/barrier/SummaryEdgeBlocker.java	9 Jun 2008 13:03:51 -0000
@@ -36,7 +36,7 @@
     				continue;
     			if(DEBUG)
     				System.out.println("Init part 1: Worklist adding: "+n);
-    			w.push(new SDGEdge(n,n,SDGEdge.Kind.HELP,label));	
+    			w.addFirst(new SDGEdge(n,n,SDGEdge.Kind.HELP,label));	
     			for (SDGEdge e : g.outgoingEdgesOf(n)) {
     				if (e.getKind() != SDGEdge.Kind.PARAMETER_OUT) 
     					continue;
@@ -67,7 +67,7 @@
 						continue;
 					if (DEBUG)
 						System.out.println("Init part 2: Worklist adding: "+n);
-					w.push(new SDGEdge(n,n,SDGEdge.Kind.HELP,label));	
+					w.addFirst(new SDGEdge(n,n,SDGEdge.Kind.HELP,label));	
 					for (SDGEdge e : g.outgoingEdgesOf(n)) {
 						if (e.getKind() != SDGEdge.Kind.PARAMETER_OUT)
 							continue;
@@ -93,7 +93,7 @@
 		Set<SDGEdge> worklist2 = new HashSet<SDGEdge>();
 		worklist2.addAll(w);
 		while(!w.isEmpty()){
-			SDGEdge edge = w.pop();
+			SDGEdge edge = w.removeFirst();
 			SDGNode n = edge.getSource();
 			SDGNode m = edge.getTarget();
 			if (DEBUG)
@@ -123,7 +123,7 @@
 										continue;
 									SDGNode x = addEdge.getTarget();
 									if (getEdge(n2,x,worklist2)==null){
-										w.push(new SDGEdge(n2,x,SDGEdge.Kind.HELP,label));
+										w.addFirst(new SDGEdge(n2,x,SDGEdge.Kind.HELP,label));
 										tempSet.add(new SDGEdge(n2,x,SDGEdge.Kind.HELP,label));
 									}
 								}
@@ -140,7 +140,7 @@
 							worklist2.add(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
 							if(DEBUG)
 								System.out.println("Worklist adding: "+e.getSource()+" -> "+edge.getTarget());
-							w.push(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
+							w.addFirst(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
 						}
 					}
 					if (e.getKind() == SDGEdge.Kind.SUMMARY
@@ -151,7 +151,7 @@
 							worklist2.add(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
 							if(DEBUG)
 								System.out.println("Worklist adding: "+e.getSource()+" -> "+edge.getTarget());
-							w.push(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
+							w.addFirst(new SDGEdge(e.getSource(),edge.getTarget(),SDGEdge.Kind.HELP,label));
 						}
 					}
 				}
